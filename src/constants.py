from decouple import config
from dydx3.constants import API_HOST_GOERLI, API_HOST_MAINNET

# MODE SELECTION
# MODE="DEV" or MODE="PROD"
MODE = "DEV"
ORDERS_LOG = config("ORDERS_LOG")
ORDERS_LOG_PATH = None if not ORDERS_LOG else config("ORDERS_LOG_PATH")
COINTEGRATED_DATA_PATH = config("COINTEGRATED_DATA_PATH")
AGENTS_DATA_PATH = f"""../{config("AGENTS_DATA_PATH")}"""

# Close all open positions and orders
ABORT_ALL_POSITIONS = True
# ABORT_ALL_POSITIONS = False

# Find integrated pairs
# FIND_INTEGRATED = False
FIND_INTEGRATED = True

# Decide to place trades
PLACE_TRADES = True
MANAGE_EXITS = True

# Resolution
RESOLUTION = "1HOUR"

# Stats window
WINDOW = 24

# Thresholds for openings
MAX_HALF_LIFE = 24
ZSCORE_THRESHOLD = 1.5
USD_PER_TRADE = 50
USD_MIN_COLLATERAL = 1880

# Thresholds for closing
CLOSE_AT_ZSCORE_CROSS = True

# Init Consts
ETHEREUM_ADDRESS = None
ETH_PRIVATE_KEY = None
HTTP_PROVIDER = None
STARK_PRIVATE_KEY = None
DYDX_API_KEY = None
DYDX_API_SECRET = None
DYDX_API_PASSPHRASE = None
HOST = None


# Env variables
# -----------------------------
# Mainnet
STARK_PRIVATE_KEY_MAINNET = config("STARK_PRIVATE_KEY_MAINNET")
DYDX_API_KEY_MAINNET = config("DYDX_API_KEY_MAINNET")
DYDX_API_SECRET_MAINNET = config("DYDX_API_SECRET_MAINNET")
DYDX_API_PASSPHRASE_MAINNET = config("DYDX_API_PASSPHRASE_MAINNET")
HTTP_PROVIDER_MAINNET = config("HTTP_PROVIDER_MAINNET")
ETHEREUM_ADDRESS_MAINNET = config("ETHEREUM_ADDRESS_MAINNET")

# Testnet
STARK_PRIVATE_KEY_TESTNET = config("STARK_PRIVATE_KEY_TESTNET")
DYDX_API_KEY_TESTNET = config("DYDX_API_KEY_TESTNET")
DYDX_API_SECRET_TESTNET = config("DYDX_API_SECRET_TESTNET")
DYDX_API_PASSPHRASE_TESTNET = config("DYDX_API_PASSPHRASE_TESTNET")
HTTP_PROVIDER_TESTNET = config("HTTP_PROVIDER_TESTNET")
ETHEREUM_ADDRESS_TESTNET = config("ETHEREUM_ADDRESS_TESTNET")

# Wallet
ETH_PRIVATE_KEY_MAINNET = config("ETH_PRIVATE_KEY_MAINNET")
ETH_PRIVATE_KEY_TESTNET = config("ETH_PRIVATE_KEY_TESTNET")

# Consts selection based on MODE
if MODE == "PROD":
    ETHEREUM_ADDRESS = ETHEREUM_ADDRESS_MAINNET
    ETH_PRIVATE_KEY = ETH_PRIVATE_KEY_MAINNET
    HTTP_PROVIDER = HTTP_PROVIDER_MAINNET
    STARK_PRIVATE_KEY = STARK_PRIVATE_KEY_MAINNET
    DYDX_API_KEY = DYDX_API_KEY_MAINNET
    DYDX_API_SECRET = DYDX_API_SECRET_MAINNET
    DYDX_API_PASSPHRASE = DYDX_API_PASSPHRASE_MAINNET
    HOST = API_HOST_MAINNET
else:
    ETHEREUM_ADDRESS = ETHEREUM_ADDRESS_TESTNET
    ETH_PRIVATE_KEY = ETH_PRIVATE_KEY_TESTNET
    HTTP_PROVIDER = HTTP_PROVIDER_TESTNET
    STARK_PRIVATE_KEY = STARK_PRIVATE_KEY_TESTNET
    DYDX_API_KEY = DYDX_API_KEY_TESTNET
    DYDX_API_SECRET = DYDX_API_SECRET_TESTNET
    DYDX_API_PASSPHRASE = DYDX_API_PASSPHRASE_TESTNET
    HOST = API_HOST_GOERLI
